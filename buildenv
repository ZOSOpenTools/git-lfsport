# Update bump details accordingly. Use bump check to confirm.
# bump: gitlfs-version /GITLFS_VERSION="(.*)"/ https://github.com/git-lfs/git-lfs|semver:*
GITLFS_VERSION="3.4.1"
export ZOPEN_STABLE_TAG="v${GITLFS_VERSION}"
export ZOPEN_STABLE_URL="https://github.com/git-lfs/git-lfs.git"
export ZOPEN_STABLE_DEPS="comp_go wharf tar gzip make coreutils"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_CATEGORIES="devops utilities editor"

export ZOPEN_TARBALL_MAN_URL="https://github.com/git-lfs/git-lfs/releases/download/v${GITLFS_VERSION}/git-lfs-linux-s390x-v${GITLFS_VERSION}.tar.gz"

export ZOPEN_COMP=GO
export ZOPEN_CONFIGURE="zopen_wharf"
export ZOPEN_CONFIGURE_MINIMAL=1
export ZOPEN_MAKE="zopen_build"
export ZOPEN_MAKE_MINIMAL=1
export ZOPEN_CHECK="zopen_check"
export ZOPEN_CLEAN="zopen_clean"
export ZOPEN_INSTALL="zopen_install"
export ZOPEN_COMP=GO

zopen_init()
{
  export CGO_ENABLED=0
  export GOBIN=$ZOPEN_INSTALL_DIR/bin
  mkdir -p $ZOPEN_INSTALL_DIR
  unset CC CXX LDFLAGS LIBS
}

zopen_build()
{
  make
}

zopen_check()
{
  make test
}

zopen_wharf()
{
  cd .. && echo ""
  git clone https://github.com/olekukonko/ts.git
  cd ts
  git apply ../patches/ts.gopatch
  cd ..
  
  go work init ./git-lfs ./ts
  wharf ./git-lfs/...
  cd ./git-lfs
}

zopen_clean()
{
  rm -rf ../.wharf_cache ../go.work* ../wharf_port
}

zopen_install()
{
  mkdir -p "$ZOPEN_INSTALL_DIR/bin"
  cp -rf bin/git-lfs  "$ZOPEN_INSTALL_DIR/bin/"
}

zopen_post_install()
{
  # Install man pages from ${GIT_MANPAGES_URL}
  GIT_SRC_DIR="${PWD}"
  GIT_ROOT="${GIT_SRC_DIR}/.."
  GIT_MAN_REL_DIR="gitlfs-manpages"
  GIT_MAN_DIR="${GIT_ROOT}/${GIT_MAN_REL_DIR}"
  GIT_MAN_TARBALL="${GIT_ROOT}/${GIT_MAN_REL_DIR}.tar.gz"

  if ! [ -d "${GIT_MAN_TARBALL}" ]; then 
    if ! curl -L "${ZOPEN_TARBALL_MAN_URL}" -o "${GIT_MAN_TARBALL}" ; then
      printSoftError "Unable to download ${GIT_MAN_TARBALL} from ${ZOPEN_TARBALL_MAN_URL}"
      return 4
    fi
  fi
  if ! rm -rf  "${GIT_MAN_DIR}"  || ! mkdir "${GIT_MAN_DIR}" || ! tar -C "${GIT_MAN_DIR}" -axf "${GIT_MAN_TARBALL}" ; then
    printSoftError "Unable to untar and create directory ${GIT_MAN_DIR}" 
    return 4
  fi

  cp -rf "${GIT_MAN_DIR}/git-lfs-${GITLFS_VERSION}/man" "$ZOPEN_INSTALL_DIR/man"
}

zopen_check_results()
{
  chk="$1/$2_check.log"
  successes=$(egrep "^ok " "${chk}" | wc -l | xargs)

  failuretests=$(egrep "^not ok " "${chk}")
  failures=$(echo "${failuretests}" | wc -l | xargs)
  totalTests=$((failures+successes))

  echo "${failuretests}" >"$1/$2_check_failures.log"

cat <<ZZ
actualFailures:$failures
totalTests:$totalTests
expectedFailures:0
ZZ
}

zopen_get_version()
{
  echo "${GITLFS_VERSION}"
}
