diff --git a/gui_others.go b/gui_others.go
index 578686f..4328d94 100644
--- a/gui_others.go
+++ b/gui_others.go
@@ -11,21 +11,15 @@ import (
 	"os"
 	"os/signal"
 	"syscall"
-	"unsafe"
 
 	"github.com/go-errors/errors"
+  "golang.org/x/sys/unix"
 )
 
 // getTermWindowSize is get terminal window size on linux or unix.
 // When gocui run inside the docker contaienr need to check and get the window size.
 func (g *Gui) getTermWindowSize() (int, int, error) {
-	var sz struct {
-		rows uint16
-		cols uint16
-		_    [2]uint16 // to match underlying syscall; see https://github.com/awesome-gocui/gocui/issues/33
-	}
-
-	var termw, termh int
+	var termw, termh uint16
 
 	out, err := os.OpenFile("/dev/tty", os.O_RDWR, 0)
 	if err != nil {
@@ -37,13 +31,11 @@ func (g *Gui) getTermWindowSize() (int, int, error) {
 	signal.Notify(signalCh, syscall.SIGWINCH, syscall.SIGINT)
 
 	for {
-		_, _, _ = syscall.Syscall(syscall.SYS_IOCTL,
-			out.Fd(), uintptr(syscall.TIOCGWINSZ), uintptr(unsafe.Pointer(&sz)))
-
+    var winsize, _ = unix.IoctlGetWinsize(int(out.Fd()), unix.TIOCGWINSZ)
 		// check terminal window size
-		termw, termh = int(sz.cols), int(sz.rows)
+		termw, termh = winsize.Row, winsize.Col
 		if termw > 0 && termh > 0 {
-			return termw, termh, nil
+			return int(termw), int(termh), nil
 		}
 
 		select {
